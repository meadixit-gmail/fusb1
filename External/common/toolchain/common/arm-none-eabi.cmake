SET(CMAKE_C_COMPILER "arm-none-eabi-gcc")
SET(CMAKE_CXX_COMPILER "arm-none-eabi-g++")
SET(AS "arm-none-eabi-as++")
SET(AR "arm-none-eabi-ar")
SET(OBJCOPY "arm-none-eabi-objcopy")
SET(OBJDUMP "arm-none-eabi-objdump")
SET(SIZE "arm-none-eabi-size")

SET(CMAKE_C_FLAGS "${MCU_FLAGS} -std=gnu11 -Wall -fdata-sections -fno-builtin -ffunction-sections" CACHE INTERNAL "C Compiler Flags")
SET(CMAKE_CXX_FLAGS "${MCU_FLAGS} -Wall -fdata-sections -fno-builtin -ffunction-sections" CACHE INTERNAL "CXX Compiler Flags")
SET(CMAKE_ASM_FLAGS "${MCU_FLAGS} -x assembler-with-cpp" CACHE INTERNAL "ASM Compiler Flags")
SET(CMAKE_EXE_LINKER_FLAGS "${MCU_FLAGS} ${LD_FLAGS} -Wl,--gc-sections" CACHE INTERNAL "ASM Compiler Flags")
SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)

SET(CMAKE_C_FLAGS_DEBUG "-O0 -g3" CACHE INTERNAL "C Debug Compiler Flags")
SET(CMAKE_CXX_FLAGS_DEBUG "-O0 -g3" CACHE INTERNAL "CXX Debug Compiler Flags")
SET(CMAKE_ASM_FLAGS_DEBUG "-g3" CACHE INTERNAL "ASM Debug Compiler Flags")

SET(CMAKE_C_FLAGS_RELASE "-Os -g3" CACHE INTERNAL "C Release Compiler Flags")
SET(CMAKE_CXX_FLAGS_RELEASE "-Os -g3" CACHE INTERNAL "CXX Relase Compiler Flags")
SET(CMAKE_ASM_FLAGS_RELEASE "" CACHE INTERNAL "ASM Release Compiler Flags")
